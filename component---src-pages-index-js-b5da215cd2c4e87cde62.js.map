{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/images/profile_pic.png","webpack:///./src/components/menu.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_2__","react_responsive_cards__WEBPACK_IMPORTED_MODULE_3__","_components_menu__WEBPACK_IMPORTED_MODULE_4__","_ref","details","data","allMarkdownRemark","edges","map","_ref2","node","frontmatter","published","title","description","excerpt","image","cover","renderFooter","a","createElement","variant","size","style","float","backgroundColor","to","fields","slug","disabled","Fragment","margin","padding","m","module","exports","require","default","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","React","createContext","PropTypes","object","string","isRequired","func","p","Menu","_material_ui_core_AppBar__WEBPACK_IMPORTED_MODULE_1__","_material_ui_core_Toolbar__WEBPACK_IMPORTED_MODULE_2__","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_3__","gatsby__WEBPACK_IMPORTED_MODULE_4__","_material_ui_core_Grid__WEBPACK_IMPORTED_MODULE_5__","position","className","src","alt","marginRight","noWrap","color","container","direction","justify","alignItems","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","propTypes","shape"],"mappings":"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","file":"component---src-pages-index-js-b5da215cd2c4e87cde62.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport Button from '@material-ui/core/Button'\nimport { Cards } from 'react-responsive-cards';\nimport { Menu } from '../components/menu';\n\nexport default ({ data }) => {\n  const details = data.allMarkdownRemark.edges.map(({ node }) => {\n    if (node.frontmatter.published) {\n      return {\n        title: node.frontmatter.title,\n        description: node.excerpt,\n        image: node.frontmatter.cover,\n        renderFooter: <Button\n          variant=\"contained\"\n          size={'large'}\n          style={{ float: 'right', backgroundColor: 'black' }}><Link to={node.fields.slug}>Read More</Link></Button>\n      }\n    }\n    return {\n      title: node.frontmatter.title,\n      description: node.excerpt,\n      image: node.frontmatter.cover,\n      renderFooter: <Button\n        disabled\n        variant=\"contained\"\n        size={'large'} style={{ float: 'right' }}><Link to={node.fields.slug}>Coming Soon</Link></Button>\n    }\n  });\n\n  return (\n    <React.Fragment>\n      <Menu />\n      <div style={{ margin: `3rem auto`, padding: `0 1rem` }}>\n        <Cards details={details} />\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            author\n            cover\n            date(formatString: \"YYYY-MM-DD\")\n            published\n          }\n          fields {\n            slug\n          }\n          excerpt\n        }\n      }\n    }\n  }\n`\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","module.exports = __webpack_public_path__ + \"static/profile_pic-2f187e721bd3adcb9136260d55d5e5ee.png\";","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { Link } from \"gatsby\"\nimport Grid from '@material-ui/core/Grid';\n\nexport const Menu = () => {\n    return (\n        <>\n        <AppBar position=\"fixed\" style={{ backgroundColor: '#242526' }}>\n            <Toolbar>\n                <div className='profile-menu-picture-container'>\n                    <img src={require(\"../images/profile_pic.png\")} className='profile-menu-picture' alt={\"\"} />\n                </div>\n                <Link to={'/'} style={{ marginRight: '20px' }}>\n                    <Typography variant=\"h6\" noWrap style={{ color: 'white' }}>\n                        Chase Hardin\n                    </Typography>\n                </Link>\n                <Grid container direction=\"row\" justify=\"flex-end\" alignItems=\"center\">\n                    <Link to={'/about/'} style={{ color: 'white' }}>\n                        <Typography variant=\"h6\">\n                            About\n                        </Typography>\n                        </Link>\n                    </Grid>\n                </Toolbar>\n            </AppBar>\n            <Toolbar />\n        </>\n    )\n}","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}