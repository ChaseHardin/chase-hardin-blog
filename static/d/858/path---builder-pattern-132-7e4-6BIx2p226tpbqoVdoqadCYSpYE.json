{"data":{"markdownRemark":{"html":"<p>Recently I’ve been using the builder pattern. It’s one of my go to patterns when setting up test data. It makes data setup extremely easy - instantiate class, chain some methods together, and finish by executing a build. However, every time I write a builder class, I can’t help but wonder if there’s a more functional approach that completely removes state. This of course is on the forefront of my mind since my current contract is writing React and functional components are the way to go.</p>\n<p>The next section will be a quick run-down of what we’re going to build. I’ll provide a quick demo of a traditional builder and then demonstrate how we can get the same results with a functional builder. Feel free to skip the basics and skip to the functional code snippets below. My GitHub is also linked if you’d like to review the details.</p>\n<h2>What are we building?</h2>\n<p>Imagine you’re a woodworker and build tables as a side business. When a potential client enquires about a dining room table, we need to get their information, keep track of the table dimensions, and calculate how much we’d charge to build a table. Without any software, this can be a time-consuming process. To quicken this, let’s build a simple builder to do the work for us.</p>\n<h2>Classic</h2>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> makeEstimate <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">EstimateBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">.</span><span class=\"token function\">setClientDetails</span><span class=\"token punctuation\">(</span><span class=\"token string\">'John Smith'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'johnSmith@email.com'</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">.</span><span class=\"token function\">setDimensions</span><span class=\"token punctuation\">(</span><span class=\"token string\">'48'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'36'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'19'</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">.</span><span class=\"token function\">calculatePrice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>The standard chunk of Lorem Ipsum used since the 1500s is reproduced below for those interested. Sections 1.10.32 and 1.10.33 from \"de Finibus Bonorum et Malorum\" by Cicero are also reproduced in their exact original form, accompanied by English versions from the 1914 translation by H. Rackham.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">EstimateBuilder</span> <span class=\"token punctuation\">{</span>\n    clientDetails\n    tableDetails\n    price\n\n    <span class=\"token function\">setClientDetails</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> email<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>clientDetails <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n            name<span class=\"token punctuation\">,</span>\n            email\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">setDimensions</span><span class=\"token punctuation\">(</span>width<span class=\"token punctuation\">,</span> length<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>tableDetails <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n            width<span class=\"token punctuation\">,</span>\n            length<span class=\"token punctuation\">,</span>\n            height\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">calculatePrice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> multiplier <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> width<span class=\"token punctuation\">,</span> length<span class=\"token punctuation\">,</span> height <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>tableDetails<span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">multiplyBy</span> <span class=\"token operator\">=</span> value <span class=\"token operator\">=></span> multiplier <span class=\"token operator\">*</span> value<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>price <span class=\"token operator\">=</span> <span class=\"token function\">multiplyBy</span><span class=\"token punctuation\">(</span>length<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token function\">multiplyBy</span><span class=\"token punctuation\">(</span>width<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token function\">multiplyBy</span><span class=\"token punctuation\">(</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token operator\">...</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>clientDetails<span class=\"token punctuation\">,</span>\n            <span class=\"token operator\">...</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>tableDetails<span class=\"token punctuation\">,</span>\n            price<span class=\"token punctuation\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>price<span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Summary of negatives with classic builder</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> makeEstimate <span class=\"token operator\">=</span> <span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>setEstimateDetails<span class=\"token punctuation\">,</span> calculatePrice<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    name<span class=\"token punctuation\">:</span> <span class=\"token string\">'John Smith'</span><span class=\"token punctuation\">,</span>\n    email<span class=\"token punctuation\">:</span> <span class=\"token string\">'johnSmith@email.com'</span><span class=\"token punctuation\">,</span>\n    width<span class=\"token punctuation\">:</span> <span class=\"token number\">48</span><span class=\"token punctuation\">,</span>\n    length<span class=\"token punctuation\">:</span> <span class=\"token number\">36</span><span class=\"token punctuation\">,</span>\n    height<span class=\"token punctuation\">:</span> <span class=\"token number\">19</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> flow <span class=\"token keyword\">from</span> <span class=\"token string\">'lodash/flow'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">setEstimateDetails</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n        name<span class=\"token punctuation\">:</span> args<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span>\n        email<span class=\"token punctuation\">:</span> args<span class=\"token punctuation\">.</span>email<span class=\"token punctuation\">,</span>\n        width<span class=\"token punctuation\">:</span> args<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span>\n        length<span class=\"token punctuation\">:</span> args<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">,</span>\n        height<span class=\"token punctuation\">:</span> args<span class=\"token punctuation\">.</span>height\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">calculatePrice</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> multiplier <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> width<span class=\"token punctuation\">,</span> length<span class=\"token punctuation\">,</span> height <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> obj<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">multiplyBy</span> <span class=\"token operator\">=</span> value <span class=\"token operator\">=></span> multiplier <span class=\"token operator\">*</span> value<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token function\">multiplyBy</span><span class=\"token punctuation\">(</span>length<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token function\">multiplyBy</span><span class=\"token punctuation\">(</span>width<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token function\">multiplyBy</span><span class=\"token punctuation\">(</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">build</span><span class=\"token punctuation\">(</span>fns<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">flow</span><span class=\"token punctuation\">(</span>fns<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Contrary to popular belief, Lorem Ipsum is not simply random text. It has roots in a piece of classical Latin literature from 45 BC, making it over 2000 years old. Richard McClintock, a Latin professor at Hampden-Sydney College in Virginia, looked up one of the more obscure Latin words, consectetur, from a Lorem Ipsum passage, and going through the cites of the word in classical literature, discovered the undoubtable source. Lorem Ipsum comes from sections 1.10.32 and 1.10.33 of \"de Finibus Bonorum et Malorum\" (The Extremes of Good and Evil) by Cicero, written in 45 BC. This book is a treatise on the theory of ethics, very popular during the Renaissance. The first line of Lorem Ipsum, \"Lorem ipsum dolor sit amet..\", comes from a line in section 1.10.32.</p>\n<p>The standard chunk of Lorem Ipsum used since the 1500s is reproduced below for those interested. Sections 1.10.32 and 1.10.33 from \"de Finibus Bonorum et Malorum\" by Cicero are also reproduced in their exact original form, accompanied by English versions from the 1914 translation by H. Rackham.</p>\n<p>Contrary to popular belief, Lorem Ipsum is not simply random text. It has roots in a piece of classical Latin literature from 45 BC, making it over 2000 years old. Richard McClintock, a Latin professor at Hampden-Sydney College in Virginia, looked up one of the more obscure Latin words, consectetur, from a Lorem Ipsum passage, and going through the cites of the word in classical literature, discovered the undoubtable source. Lorem Ipsum comes from sections 1.10.32 and 1.10.33 of \"de Finibus Bonorum et Malorum\" (The Extremes of Good and Evil) by Cicero, written in 45 BC. This book is a treatise on the theory of ethics, very popular during the Renaissance. The first line of Lorem Ipsum, \"Lorem ipsum dolor sit amet..\", comes from a line in section 1.10.32.</p>\n<p>The standard chunk of Lorem Ipsum used since the 1500s is reproduced below for those interested. Sections 1.10.32 and 1.10.33 from \"de Finibus Bonorum et Malorum\" by Cicero are also reproduced in their exact original form, accompanied by English versions from the 1914 translation by H. Rackham.</p>","frontmatter":{"title":"A Functional Approach to The Builder Pattern"}}},"pageContext":{"slug":"/builder-pattern/"}}